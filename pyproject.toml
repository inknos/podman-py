[build-system]
# Any changes should be copied into requirements.txt, setup.cfg, and/or test-requirements.txt
requires = ["hatchling"] # or setuptools>=61.0.0
build-backend = "hatchling.build" # or setuptools.build_meta

[project]
name = "podman"
version = "5.0.0" # TODO can be dynamic = [ "version" ]
description = "Bindings for Podman RESTful API"
readme = "README.md"
license = "Apache-2.0"
license-files = { paths = ["LICENSE"] }
requires-python = ">=3.6"
authors = [
    { name = "Brent Baude" },
    { name = "Jhon Honce", email = "jhonce@redhat.com" },
    { name = "Urvashi Mohnani" },
]
keywords = [
    "libpod",
    "podman",
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "pyxdg >=0.26", # TODO replace with os
    "requests >=2.24",
    "sphinx", # TODO hatch new --init didn't add this line
    "tomli>=1.2.3; python_version<'3.11'",
    "urllib3",
]

[project.optional-dependencies]
progress_bar = [
    "rich >= 12.5.1",
]

[project.urls]
"Bug Tracker" = "https://github.com/containers/podman-py/issues"
Homepage = "https://github.com/containers/podman-py"
"Libpod API" = "https://docs.podman.io/en/latest/_static/api.html"

[tool.hatch.version]
path = "podman/__init__.py"

[tool.hatch.build.targets.sdist]
include = [
    "/podman",
]
# to run a test environment, use `hatch shell`
# and not use virtualenv anymore
[tool.hatch.envs.default]
dependencies = [
    "coverage",
    "pre-commit",
    "fixtures",
    "pytest",
    "requests-mock >= 1.11.0",
    "ruff",
]
[tool.hatch.envs.default.scripts]
test-cov = "coverage run -m pytest"
cov-report = "coverage report -m --skip-covered --fail-under=80 --omit=podman/tests/* --omit=.tox/*"
test-all = ["test-cov", "cov-report"]
# This environment has multiple python envs
[tool.hatch.envs.test]
[[tool.hatch.envs.test.matrix]]
python = ["3.9", "3.11", "3.12"]

[tool.pytest.ini_options]
log_cli = true
log_cli_level = "DEBUG"
log_cli_format = "%(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.ruff]
line-length = 100
[tool.ruff.format]
exclude = [
    ".git",
    ".venv",
    ".history",
    "build",
    "dist",
    "docs",
    "hack",
]
quote-style = "preserve"
[tool.ruff.lint]
select = [
    # More stuff here https://docs.astral.sh/ruff/rules/
    "F", # Pyflakes
    "E", # Pycodestyle Error
    "W", # Pycodestyle Warning
    "N", # PEP8 Naming
    # TODO "UP", # Pyupgrade
    # TODO "ANN",
    # TODO "S", # Bandit
    # "B", # Bugbear
    "A", # flake-8-builtins
    "YTT", # flake-8-2020
    "PLC", # Pylint Convention
    "PLE", # Pylint Error
    "PLW", # Pylint Warning
]
ignore = [
    "F821", # TODO Undefined name
    "F541", # TODO f-string is missing placeholders
    "F401", # TODO Module imported but unused
    "F841", # TODO Local variable is assigned to but never used
    "E402", # TODO Module level import not at top of file
    "E741", # TODO ambiguous variable name
    "E722", # TODO do not use bare 'except'
    "E501", # TODO line too long
    "N818", # TODO Error Suffix in exception name
    "N80", # TODO Invalid Name
    "ANN10", # Missing type annotation
    "PLW2901", # TODO Redefined Loop Name
]
[tool.ruff.lint.per-file-ignores]
"podman/tests/*.py" = ["S"]
[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["copyright", "all"]
